#########################################
## SQLSERVER CONVERSION CONFIGURATION
#########################################

# Table name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.tableName  = snake_case 

# Column name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.columnName = snake_case

# Primary Key name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.pkName = snake_case

# Foreign Key name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.fkName = snake_case


#########################################
# Neutral type to SQL type
# see : https://www.sqlshack.com/an-overview-of-sql-server-data-types/ 
# SQL Server uses the IDENTITY keyword to perform an auto-increment feature
# An IDENTITY column can be any of the following data types tinyint, smallint, int, bigint, decimal(p,0), or numeric(p,0). 
#########################################

# char(%s)     : 0 -> 8000 characters (fixed width)
# nchar(%s)    : Unicode char
# varchar(%s)  : 0 -> 8000 characters (variable width)
# nvarchar(%s) : Unicode varchar
type.string = varchar(%s)
# type.string = varchar(%S)  : 'S' for mandatory

# tinyint : 1 byte [ 0 -> 255 ] 
type.byte          = tinyint
type.byte.autoincr = tinyint identity

# smallint : 2 bytes [ -32,768 -> 32,767 ] 
type.short          = smallint
type.short.autoincr = smallint identity

# int : 4 bytes [ -2,147,483,648 -> +2,147,483,647 ] 
type.int           = int
type.int.autoincr  = int identity

# bigint : 8 bytes 
type.long          = bigint
type.long.autoincr = bigint identity

# decimal and numeric are synonyms.
type.decimal   = numeric(%p) 
# type.decimal   = numeric(%P) 'P' for mandatory
type.decimal.autoincr = numeric(%p)  identity

# real : 4 bytes,   "float(24)" : ISO synonym for "real"
type.float     = real

# float(N) : N(1-24) -> 4 bytes, N(25-53) -> 8 bytes, default value of N is 53
type.double    = float(%p)

# No boolean. You could use the BIT datatype to represent boolean data. A BIT field's value is either 1, 0, or null.
type.boolean   = bit

# date : 3 bytes ( 0001-01-01 -> 9999-12-31 )
type.date      = date

# time : 5 bytes, [ 00:00:00.0000000 -> 23:59:59.9999999 ]  
type.time      = time

# no TIME WITH TIME ZONE in SQL server
type.timetz    = time

# datetime : 8 bytes, default "1900-01-01 00:00:00", [ 1753-01-01 -> 9999-12-31 ], accuracy in increments of .000, .003, or .007 seconds. 
# datetime2 : 6-8 bytes,  [ 0001-01-01 -> 9999-12-31 ]
# smalldatetime : 4 bytes, [ 1900-01-01 -> 2079-06-06 ]
type.datetime  = datetime2
type.timestamp = datetime2
# datetimeoffset :  10 bytes, similar to a datetime2 data type but includes time zone offset 
type.datetimetz  = datetimeoffset

# binary    :  0 -> 8000 bytes 
# varbinary :  0 -> 8000 bytes 
# image     :  0 -> 2,147,483,647 bytes
type.binary    = varbinary

# Type UNIQUEIDENTIFIER : globally unique identifier (GUID) stores a 16-byte binary value
type.uuid    = uniqueidentifier
