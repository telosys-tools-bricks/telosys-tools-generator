#########################################
## POSTGRESQL CONVERSION CONFIGURATION
#########################################

# Table name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.tableName  = snake_case 

# Column name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.columnName = snake_case

# Primary Key name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.pkName = snake_case

# Foreign Key name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.fkName = snake_case


#########################################
# Neutral type to SQL type
#########################################

type.string = varchar(%s)
# type.decimal   = numeric(%S) 'S' for mandatory
  
type.byte          = smallint
type.byte.autoincr = smallserial

type.short          = smallint
type.short.autoincr = smallserial

type.int           = integer
type.int.autoincr  = serial

type.long          = bigint
type.long.autoincr = bigserial

type.decimal   = numeric(%p)
# type.decimal   = numeric(%P) 'P' for mandatory
type.float     = real
type.double    = double precision
  
type.boolean   = boolean

type.date      = date

type.time      = time
type.timetz    = time with time zone

type.timestamp = timestamp
type.datetime  = timestamp
type.datetimetz  = timestamp with time zone


type.binary    = bytea

type.uuid = uuid
# A UUID is written as a sequence of lower-case hexadecimal digits, in several groups separated by hyphens, 
# specifically a group of 8 digits followed by three groups of 4 digits followed by a group of 12 digits, 
# for a total of 32 digits representing the 128 bits.  ( eg a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11 )

